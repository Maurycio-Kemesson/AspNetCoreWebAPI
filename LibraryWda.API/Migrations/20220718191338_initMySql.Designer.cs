// <auto-generated />
using System;
using LibraryWda.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryWda.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220718191338_initMySql")]
    partial class initMySql
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LibraryWda.API.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Img")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PublishingCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("Quantities")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("PublishingCompanyId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "John Green",
                            PublicationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublishingCompanyId = 1,
                            Quantities = 1,
                            Title = "A culpa é das estrelas"
                        },
                        new
                        {
                            Id = 2,
                            Author = "John Green",
                            PublicationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublishingCompanyId = 1,
                            Quantities = 1,
                            Title = "Quem é você Alasca?"
                        },
                        new
                        {
                            Id = 3,
                            Author = "John Green",
                            PublicationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublishingCompanyId = 1,
                            Quantities = 1,
                            Title = "Will & Will"
                        });
                });

            modelBuilder.Entity("LibraryWda.API.Models.BookLoan", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("StudentId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("BookLoans");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            BookId = 1,
                            LoanDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            StudentId = 2,
                            BookId = 2,
                            LoanDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            StudentId = 3,
                            BookId = 3,
                            LoanDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LibraryWda.API.Models.PublishingCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Initials")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("PublishingCompanys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Interseca"
                        });
                });

            modelBuilder.Entity("LibraryWda.API.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Registration")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rua A",
                            BirthDate = new DateTime(2001, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnrollmentDate = new DateTime(2022, 7, 18, 16, 13, 38, 1, DateTimeKind.Local).AddTicks(7600),
                            Name = "Maurycio",
                            Registration = 20221,
                            Status = true,
                            Surname = "Kemesson",
                            Telephone = "33225555"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Rua A",
                            BirthDate = new DateTime(1997, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnrollmentDate = new DateTime(2022, 7, 18, 16, 13, 38, 2, DateTimeKind.Local).AddTicks(5916),
                            Name = "Valdeli",
                            Registration = 20222,
                            Status = true,
                            Surname = "Nascimento",
                            Telephone = "3354288"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Rua A",
                            BirthDate = new DateTime(1985, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EnrollmentDate = new DateTime(2022, 7, 18, 16, 13, 38, 2, DateTimeKind.Local).AddTicks(5979),
                            Name = "Rafael",
                            Registration = 20223,
                            Status = true,
                            Surname = "Araujo",
                            Telephone = "55668899"
                        });
                });

            modelBuilder.Entity("LibraryWda.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "maurycio.kemesson@gmail.com",
                            Name = "Maurycio Kemesson",
                            Password = "Qwe123*"
                        });
                });

            modelBuilder.Entity("LibraryWda.API.Models.Book", b =>
                {
                    b.HasOne("LibraryWda.API.Models.PublishingCompany", "PublishingCompany")
                        .WithMany()
                        .HasForeignKey("PublishingCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryWda.API.Models.BookLoan", b =>
                {
                    b.HasOne("LibraryWda.API.Models.Book", "Book")
                        .WithMany("BooksLoans")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryWda.API.Models.Student", "Student")
                        .WithMany("BooksLoans")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
